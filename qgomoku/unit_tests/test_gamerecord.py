

import unittest
from qgomoku.core.board import Board
from qgomoku.core.game_record import GameRecord

class TestGameRecordMethods(unittest.TestCase):
    def test_parse(self):
        board = Board(size=9)
        board.move_coord(5, 5)
        record = GameRecord.create(board)
        record.add_move(35, 0, 0)
        record.set_winner(1)
        with self.assertRaises(ValueError):
            record.add_move(45, 0, 0)
        board = Board(size=9)
        record2 = GameRecord.create(board)
        record2.add_move(45, 0, 0)
        record2.add_move(35, 0, 0)
        record2.set_winner(1)

    def test_complexparse(self):
        sample_gamestring = '{"initial_state": {"size": "9", "win_chain_length": "5", "boardstring": "000000100000000000000001102000002000000000000000000000000000000020000000000000000", "player_to_move": "1"}, "moves": [22, 21, 40, 31, 42, 33, 30, 34, 35, 41, 38, 14, 54, 46, 51, 49, 57, 11, 1, 55, 37, 39, 47, 25, 17, 67, 50, 60, 20, 10, 56, 29, 74, 65, 66, 13, 58], "winning_player": 1, "q_assessments": [[0.1668100208044052, 0.33525359630584717], [0.3994003236293793, 0.24215756356716156], [0.2018590271472931, 0.29990068078041077], [0.4258742928504944, 0.11599751561880112], [0.017245644703507423, 0.16036012768745422], [0.21906672418117523, 0.015978770330548286], [0.04823630675673485, -0.08495990931987762], [0.3290388882160187, 0.03167437016963959], [0.21332506835460663, 0.0354134738445282], [0.2644520699977875, 0.0908007100224495], [-0.14151248335838318, 0.05539955943822861], [0.03722734749317169, 0.12088491767644882], [-0.04074528440833092, 0.016778597608208656], [-0.09393633157014847, -0.12253795564174652], [-0.09829752892255783, -0.16916722059249878], [0.003931361250579357, -0.20802094042301178], [-0.15619787573814392, -0.25911909341812134], [-0.097310870885849, -0.2324538677930832], [-0.07086139172315598, -0.17062552273273468], [-0.11676185578107834, -0.23419712483882904], [-0.07421347498893738, -0.1337175816297531], [-0.06327033042907715, -0.17107190191745758], [-0.06181388348340988, -0.11561759561300278], [-0.09483533352613449, -0.13382649421691895], [-0.03963194042444229, -0.07954724878072739], [-0.15681573748588562, -0.13869509100914001], [-0.10265619307756424, 0.02845008485019207], [-0.12955132126808167, -0.09671367704868317], [-0.023986704647541046, 0.0766296461224556], [-0.12735527753829956, -0.10607543587684631], [-0.019179100170731544, 0.000446834514150396], [-0.12955188751220703, -0.0977582260966301], [0.009337697178125381, -0.05667382851243019], [-0.15969929099082947, -0.15699654817581177], [-0.024815162643790245, -0.0809166207909584], [-0.16441792249679565, -0.201398104429245], [-0.05777398869395256, 1.0]]}'
        record = GameRecord.parse(sample_gamestring)

if __name__ == '__main__':
    unittest.main()


